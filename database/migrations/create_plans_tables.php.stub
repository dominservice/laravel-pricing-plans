<?php

/**
 * Conversations
 *
 * This package will allow you to add a full user messaging system
 * into your Laravel application.
 *
 * @package   Dominservice\Conversations
 * @author    DSO-IT Mateusz Domin <biuro@dso.biz.pl>
 * @copyright (c) 2021 DSO-IT Mateusz Domin
 * @license   MIT
 * @version   1.0.0
 */

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        $tables = config('plans.tables');

        Schema::create($tables['features'], function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('code')->unique();
            $table->text('description')->nullable();
            $table->string('interval_unit')->default('month');
            $table->smallInteger('interval_count')->unsigned()->default(1);

            $table->smallInteger('sort_order')->nullable();
            $table->timestamps();
        });

        Schema::create($tables['plans'], function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('code')->unique();
            $table->text('description')->nullable();
            $table->decimal('price', 15, 4)->default('0.00');
            $table->string('interval_unit')->default('month');
            $table->smallInteger('interval_count')->unsigned()->default(1);
            $table->smallInteger('trial_period_days')->nullable();

            $table->smallInteger('sort_order')->nullable();
            $table->timestamps();
        });

        Schema::create($tables['plan_features'], function (Blueprint $table) use ($tables) {
            $table->id();
            $table->foreignId('plan_id')
                ->references('id')
                ->on($tables['plans'])
                ->onDelete('cascade');
            $table->foreignId('feature_id')->references('id')
                ->on($tables['features'])
                ->onDelete('cascade');
            $table->string('value');
            $table->text('note')->nullable();
            $table->timestamps();

            $table->unique(['plan_id', 'feature_id'], 'unique_plan_feat');
        });

        Schema::create($tables['plan_subscriptions'], function (Blueprint $table) use ($tables) {
            $table->id();
            $table->morphs('subscriber', 'subscriber_type_id_index');
            $table->foreignId('plan_id')
                ->references('id')
                ->on($tables['plans'])
                ->onDelete('cascade');
            $table->string('name');
            $table->boolean('canceled_immediately')->nullable();
            $table->boolean('over_use')->default(false);
            $table->timestamp('trial_ends_at')->nullable();
            $table->timestamp('starts_at')->nullable();
            $table->timestamp('ends_at')->nullable();
            $table->timestamp('canceled_at')->nullable();
            $table->timestamps();

            $table->index(['subscriber_type', 'subscriber_id', 'plan_id'], 'index_sub_plan');
        });

        Schema::create($tables['plan_subscription_usages'], function (Blueprint $table) use ($tables) {
            $table->id();
            $table->foreignId('subscription_id')
                ->references('id')
                ->on($tables['plan_subscriptions'])
                ->onDelete('cascade');
            $table->string('feature_code');
            $table->smallInteger('used')->unsigned()->default(0);
            $table->timestamp('valid_until')->nullable();
            $table->timestamps();

            $table->foreign('feature_code')->references('code')->on($tables['features'])->onDelete('cascade');
            $table->unique(['subscription_id', 'feature_code'], 'unique_sub_feat');
        });

        Schema::create($tables['plan_subscription_history'], function (Blueprint $table) use ($tables) {
            $table->id();
            $table->foreignId('subscription_id')
                ->references('id')
                ->on($tables['plan_subscriptions'])
                ->onDelete('cascade');
            $table->foreignId('plan_id')
                ->references('id')
                ->on($tables['plans'])
                ->onDelete('cascade');
            $table->string('feature_code');
            $table->smallInteger('used')->unsigned()->default(0);
            $table->smallInteger('hired')->unsigned()->default(0);
            $table->date('starts_at');
            $table->date('ends_at');
            $table->timestamps();

            $table->foreign('feature_code')->references('code')->on($tables['features'])->onDelete('cascade');
            $table->unique(['subscription_id', 'feature_code', 'plan_id', 'starts_at'], 'unique_sub_feat_plan_hist');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        $tables = config('plans.tables');

        Schema::dropIfExists($tables['plan_subscription_history']);
        Schema::dropIfExists($tables['plan_subscription_usages']);
        Schema::dropIfExists($tables['plan_subscriptions']);
        Schema::dropIfExists($tables['plan_features']);
        Schema::dropIfExists($tables['plans']);
        Schema::dropIfExists($tables['features']);
    }
};
